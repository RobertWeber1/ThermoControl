ARM GAS  /tmp/ccLs2c0t.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_MspInit:
  25              	.LFB419:
  26              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @file    stm32g0xx_hal.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   @verbatim
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ==============================================================================
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   @endverbatim
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @attention
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics. 
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * the "License"; You may not use this file except in compliance with the 
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ******************************************************************************
ARM GAS  /tmp/ccLs2c0t.s 			page 2


  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #include "stm32g0xx_hal.h"
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup STM32G0xx_HAL_Driver
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief HAL module driver
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief STM32G0xx HAL Driver version number
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION_SUB1   (0x04U) /*!< [23:16] sub1 version */
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION_SUB2   (0x02U) /*!< [15:8]  sub2 version */
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION         ((__STM32G0xx_HAL_VERSION_MAIN << 24U)\
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                                         |(__STM32G0xx_HAL_VERSION_SUB1 << 16U)\
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                                         |(__STM32G0xx_HAL_VERSION_SUB2 << 8U )\
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                                         |(__STM32G0xx_HAL_VERSION_RC))
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if defined(VREFBUF)
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define VREFBUF_TIMEOUT_VALUE     10U   /*!<  10 ms */
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* VREFBUF */
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @defgroup HAL_Exported_Variables HAL Exported Variables
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __IO uint32_t uwTick;
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t uwTickPrio = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Exported functions --------------------------------------------------------*/
  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
ARM GAS  /tmp/ccLs2c0t.s 			page 3


  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group1
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *  @brief    HAL Initialization and Configuration functions
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @verbatim
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****            ##### HAL Initialization and Configuration functions #####
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]  This section provides functions allowing to:
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Initialize the Flash interface the NVIC allocation and initial time base
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****           clock configuration.
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) De-initialize common part of the HAL.
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****           Tick interrupt priority.
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              handled in milliseconds basis.
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****             ISR process will be blocked.
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @endverbatim
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Configure the Flash prefetch and the Instruction cache,
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         the time base source, NVIC and any required global low level hardware
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         by calling the HAL_MspInit() callback function to be optionally defined in user file
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         stm32g0xx_hal_msp.c.
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note   HAL_Init() function is called at the beginning of program after reset and before
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         the clock configuration.
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note   In the default implementation the System Timer (Systick) is used as source of time base
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         The Systick configuration is based on HSI clock, as HSI is the clock
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         used after a system Reset.
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         Once done, time base tick starts incrementing: the tick variable counter is incremented
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         each 1ms in the SysTick_Handler() interrupt handler.
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval HAL status
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
ARM GAS  /tmp/ccLs2c0t.s 			page 4


 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Configure Flash prefetch, Instruction cache             */
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Default configuration at reset is:                      */
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* - Prefetch disabled                                     */
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* - Instruction cache enabled                             */
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if (INSTRUCTION_CACHE_ENABLE == 0U)
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* INSTRUCTION_CACHE_ENABLE */
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     status = HAL_ERROR;
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   else
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Init the low level hardware */
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_MspInit();
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Return function status */
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return status;
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the source of time base.
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note   This function is optional.
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval HAL status
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Reset of all peripherals */
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_IOP_FORCE_RESET();
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* De-Init the low level hardware */
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_MspDeInit();
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Return function status */
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return HAL_OK;
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Initialize the MSP.
ARM GAS  /tmp/ccLs2c0t.s 			page 5


 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_MspInit(void)
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
  27              		.loc 1 207 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****    */
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
  32              		.loc 1 211 1 is_stmt 0 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE419:
  38              		.section	.text.HAL_MspDeInit,"ax",%progbits
  39              		.align	1
  40              		.weak	HAL_MspDeInit
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	HAL_MspDeInit:
  47              	.LFB420:
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  DeInitializes the MSP.
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_MspDeInit(void)
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
  48              		.loc 1 218 1 is_stmt 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****    */
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
  53              		.loc 1 222 1 is_stmt 0 view .LVU3
  54              		@ sp needed
  55 0000 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE420:
  59              		.section	.text.HAL_DeInit,"ax",%progbits
  60              		.align	1
  61              		.global	HAL_DeInit
  62              		.syntax unified
  63              		.code	16
  64              		.thumb_func
  65              		.fpu softvfp
  67              	HAL_DeInit:
  68              	.LFB418:
ARM GAS  /tmp/ccLs2c0t.s 			page 6


 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Reset of all peripherals */
  69              		.loc 1 181 1 is_stmt 1 view -0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  78              		.loc 1 183 3 view .LVU5
  79 0002 084B     		ldr	r3, .L4
  80 0004 0121     		movs	r1, #1
  81 0006 4942     		rsbs	r1, r1, #0
  82 0008 D962     		str	r1, [r3, #44]
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  83              		.loc 1 184 3 view .LVU6
  84 000a 0022     		movs	r2, #0
  85 000c DA62     		str	r2, [r3, #44]
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  86              		.loc 1 186 3 view .LVU7
  87 000e 1963     		str	r1, [r3, #48]
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  88              		.loc 1 187 3 view .LVU8
  89 0010 1A63     		str	r2, [r3, #48]
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  90              		.loc 1 189 3 view .LVU9
  91 0012 9962     		str	r1, [r3, #40]
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  92              		.loc 1 190 3 view .LVU10
  93 0014 9A62     		str	r2, [r3, #40]
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
  94              		.loc 1 192 3 view .LVU11
  95 0016 5962     		str	r1, [r3, #36]
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  96              		.loc 1 193 3 view .LVU12
  97 0018 5A62     		str	r2, [r3, #36]
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  98              		.loc 1 196 3 view .LVU13
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  99              		.loc 1 196 16 is_stmt 0 view .LVU14
 100 001a FFF7FEFF 		bl	HAL_MspDeInit
 101              	.LVL0:
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 102              		.loc 1 199 3 is_stmt 1 view .LVU15
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 103              		.loc 1 200 1 is_stmt 0 view .LVU16
 104 001e 0020     		movs	r0, #0
 105              		@ sp needed
 106 0020 10BD     		pop	{r4, pc}
 107              	.L5:
 108 0022 C046     		.align	2
 109              	.L4:
 110 0024 00100240 		.word	1073876992
 111              		.cfi_endproc
 112              	.LFE418:
ARM GAS  /tmp/ccLs2c0t.s 			page 7


 114              		.global	__aeabi_uidiv
 115              		.section	.text.HAL_InitTick,"ax",%progbits
 116              		.align	1
 117              		.weak	HAL_InitTick
 118              		.syntax unified
 119              		.code	16
 120              		.thumb_func
 121              		.fpu softvfp
 123              	HAL_InitTick:
 124              	.LVL1:
 125              	.LFB421:
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief This function configures the source of the time base:
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *        Tick interrupt priority.
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementation  in user file.
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval HAL status
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 126              		.loc 1 241 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		.loc 1 241 1 is_stmt 0 view .LVU18
 131 0000 10B5     		push	{r4, lr}
 132              	.LCFI1:
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
 136 0002 0400     		movs	r4, r0
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 137              		.loc 1 242 3 is_stmt 1 view .LVU19
 138              	.LVL2:
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that doesn't take the valu
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   if ((uint32_t)uwTickFreq != 0U)
 139              		.loc 1 245 3 view .LVU20
 140              		.loc 1 245 28 is_stmt 0 view .LVU21
 141 0004 114B     		ldr	r3, .L13
 142 0006 1978     		ldrb	r1, [r3]
 143              		.loc 1 245 3 view .LVU22
 144 0008 0029     		cmp	r1, #0
 145 000a 01D1     		bne	.L11
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     /*Configure the SysTick to have interrupt in 1ms time basis*/
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     if (HAL_SYSTICK_Config(SystemCoreClock / (1000U /(uint32_t)uwTickFreq)) == 0U)
ARM GAS  /tmp/ccLs2c0t.s 			page 8


 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       /* Configure the SysTick IRQ priority */
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       {
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         uwTickPrio = TickPriority;
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       else
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       {
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         status = HAL_ERROR;
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     else
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       status = HAL_ERROR;
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   else
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     status = HAL_ERROR;
 146              		.loc 1 268 12 view .LVU23
 147 000c 0120     		movs	r0, #1
 148              	.LVL3:
 149              	.L7:
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Return function status */
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return status;
 150              		.loc 1 272 3 is_stmt 1 view .LVU24
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 151              		.loc 1 273 1 is_stmt 0 view .LVU25
 152              		@ sp needed
 153              	.LVL4:
 154              		.loc 1 273 1 view .LVU26
 155 000e 10BD     		pop	{r4, pc}
 156              	.LVL5:
 157              	.L11:
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 158              		.loc 1 248 5 is_stmt 1 view .LVU27
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 159              		.loc 1 248 53 is_stmt 0 view .LVU28
 160 0010 FA20     		movs	r0, #250
 161              	.LVL6:
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 162              		.loc 1 248 53 view .LVU29
 163 0012 8000     		lsls	r0, r0, #2
 164 0014 FFF7FEFF 		bl	__aeabi_uidiv
 165              	.LVL7:
 166 0018 0100     		movs	r1, r0
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 167              		.loc 1 248 27 view .LVU30
 168 001a 0D4B     		ldr	r3, .L13+4
 169 001c 1868     		ldr	r0, [r3]
 170 001e FFF7FEFF 		bl	__aeabi_uidiv
 171              	.LVL8:
 172 0022 FFF7FEFF 		bl	HAL_SYSTICK_Config
 173              	.LVL9:
ARM GAS  /tmp/ccLs2c0t.s 			page 9


 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 174              		.loc 1 248 5 view .LVU31
 175 0026 0028     		cmp	r0, #0
 176 0028 0DD1     		bne	.L9
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       {
 177              		.loc 1 251 7 is_stmt 1 view .LVU32
 178 002a 032C     		cmp	r4, #3
 179 002c 01D9     		bls	.L12
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 180              		.loc 1 258 16 is_stmt 0 view .LVU33
 181 002e 0120     		movs	r0, #1
 182 0030 EDE7     		b	.L7
 183              	.L12:
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         uwTickPrio = TickPriority;
 184              		.loc 1 253 9 is_stmt 1 view .LVU34
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         uwTickPrio = TickPriority;
 185              		.loc 1 253 29 is_stmt 0 view .LVU35
 186 0032 0130     		adds	r0, r0, #1
 187 0034 0022     		movs	r2, #0
 188 0036 2100     		movs	r1, r4
 189 0038 4042     		rsbs	r0, r0, #0
 190 003a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 191              	.LVL10:
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 192              		.loc 1 254 9 is_stmt 1 view .LVU36
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 193              		.loc 1 254 20 is_stmt 0 view .LVU37
 194 003e 054B     		ldr	r3, .L13+8
 195 0040 1C60     		str	r4, [r3]
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 196              		.loc 1 242 22 view .LVU38
 197 0042 0020     		movs	r0, #0
 198 0044 E3E7     		b	.L7
 199              	.L9:
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 200              		.loc 1 263 14 view .LVU39
 201 0046 0120     		movs	r0, #1
 202 0048 E1E7     		b	.L7
 203              	.L14:
 204 004a C046     		.align	2
 205              	.L13:
 206 004c 00000000 		.word	.LANCHOR0
 207 0050 00000000 		.word	SystemCoreClock
 208 0054 00000000 		.word	.LANCHOR1
 209              		.cfi_endproc
 210              	.LFE421:
 212              		.section	.text.HAL_Init,"ax",%progbits
 213              		.align	1
 214              		.global	HAL_Init
 215              		.syntax unified
 216              		.code	16
 217              		.thumb_func
 218              		.fpu softvfp
 220              	HAL_Init:
 221              	.LFB417:
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 222              		.loc 1 144 1 is_stmt 1 view -0
ARM GAS  /tmp/ccLs2c0t.s 			page 10


 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226 0000 10B5     		push	{r4, lr}
 227              	.LCFI2:
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 4, -8
 230              		.cfi_offset 14, -4
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 231              		.loc 1 145 3 view .LVU41
 232              	.LVL11:
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 233              		.loc 1 157 3 view .LVU42
 234 0002 084A     		ldr	r2, .L19
 235 0004 1168     		ldr	r1, [r2]
 236 0006 8023     		movs	r3, #128
 237 0008 5B00     		lsls	r3, r3, #1
 238 000a 0B43     		orrs	r3, r1
 239 000c 1360     		str	r3, [r2]
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 240              		.loc 1 161 3 view .LVU43
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 241              		.loc 1 161 19 is_stmt 0 view .LVU44
 242 000e 0320     		movs	r0, #3
 243 0010 FFF7FEFF 		bl	HAL_InitTick
 244              	.LVL12:
 245 0014 041E     		subs	r4, r0, #0
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 246              		.loc 1 161 3 view .LVU45
 247 0016 02D0     		beq	.L18
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 248              		.loc 1 163 12 view .LVU46
 249 0018 0124     		movs	r4, #1
 250              	.L16:
 251              	.LVL13:
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 252              		.loc 1 172 3 is_stmt 1 view .LVU47
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 253              		.loc 1 173 1 is_stmt 0 view .LVU48
 254 001a 2000     		movs	r0, r4
 255              		@ sp needed
 256              	.LVL14:
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 257              		.loc 1 173 1 view .LVU49
 258 001c 10BD     		pop	{r4, pc}
 259              	.LVL15:
 260              	.L18:
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 261              		.loc 1 168 3 is_stmt 1 view .LVU50
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 262              		.loc 1 168 14 is_stmt 0 view .LVU51
 263 001e FFF7FEFF 		bl	HAL_MspInit
 264              	.LVL16:
 265 0022 FAE7     		b	.L16
 266              	.L20:
 267              		.align	2
 268              	.L19:
ARM GAS  /tmp/ccLs2c0t.s 			page 11


 269 0024 00200240 		.word	1073881088
 270              		.cfi_endproc
 271              	.LFE417:
 273              		.section	.text.HAL_IncTick,"ax",%progbits
 274              		.align	1
 275              		.weak	HAL_IncTick
 276              		.syntax unified
 277              		.code	16
 278              		.thumb_func
 279              		.fpu softvfp
 281              	HAL_IncTick:
 282              	.LFB422:
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group2
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *  @brief    HAL Control functions
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @verbatim
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                       ##### HAL Control functions #####
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]  This section provides functions allowing to:
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Provide a tick value in millisecond
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Suspend the time base source interrupt
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Resume the time base source interrupt
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Get the HAL API driver version
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Get the device identifier
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Get the device revision identifier
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @endverbatim
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *        used as application time base.
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       in SysTick ISR.
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *      implementations in user file.
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_IncTick(void)
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 283              		.loc 1 309 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uwTick += (uint32_t)uwTickFreq;
 288              		.loc 1 310 3 view .LVU53
 289              		.loc 1 310 13 is_stmt 0 view .LVU54
 290 0000 034B     		ldr	r3, .L22
ARM GAS  /tmp/ccLs2c0t.s 			page 12


 291 0002 1B78     		ldrb	r3, [r3]
 292              		.loc 1 310 10 view .LVU55
 293 0004 034A     		ldr	r2, .L22+4
 294 0006 1168     		ldr	r1, [r2]
 295 0008 5B18     		adds	r3, r3, r1
 296 000a 1360     		str	r3, [r2]
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 297              		.loc 1 311 1 view .LVU56
 298              		@ sp needed
 299 000c 7047     		bx	lr
 300              	.L23:
 301 000e C046     		.align	2
 302              	.L22:
 303 0010 00000000 		.word	.LANCHOR0
 304 0014 00000000 		.word	.LANCHOR2
 305              		.cfi_endproc
 306              	.LFE422:
 308              		.section	.text.HAL_GetTick,"ax",%progbits
 309              		.align	1
 310              		.weak	HAL_GetTick
 311              		.syntax unified
 312              		.code	16
 313              		.thumb_func
 314              		.fpu softvfp
 316              	HAL_GetTick:
 317              	.LFB423:
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Provides a tick value in millisecond.
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementations in user file.
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval tick value
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 318              		.loc 1 320 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return uwTick;
 323              		.loc 1 321 3 view .LVU58
 324              		.loc 1 321 10 is_stmt 0 view .LVU59
 325 0000 014B     		ldr	r3, .L25
 326 0002 1868     		ldr	r0, [r3]
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 327              		.loc 1 322 1 view .LVU60
 328              		@ sp needed
 329 0004 7047     		bx	lr
 330              	.L26:
 331 0006 C046     		.align	2
 332              	.L25:
 333 0008 00000000 		.word	.LANCHOR2
 334              		.cfi_endproc
 335              	.LFE423:
 337              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 338              		.align	1
ARM GAS  /tmp/ccLs2c0t.s 			page 13


 339              		.global	HAL_GetTickPrio
 340              		.syntax unified
 341              		.code	16
 342              		.thumb_func
 343              		.fpu softvfp
 345              	HAL_GetTickPrio:
 346              	.LFB424:
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief This function returns a tick priority.
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval tick priority
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 347              		.loc 1 329 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return uwTickPrio;
 352              		.loc 1 330 3 view .LVU62
 353              		.loc 1 330 10 is_stmt 0 view .LVU63
 354 0000 014B     		ldr	r3, .L28
 355 0002 1868     		ldr	r0, [r3]
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 356              		.loc 1 331 1 view .LVU64
 357              		@ sp needed
 358 0004 7047     		bx	lr
 359              	.L29:
 360 0006 C046     		.align	2
 361              	.L28:
 362 0008 00000000 		.word	.LANCHOR1
 363              		.cfi_endproc
 364              	.LFE424:
 366              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 367              		.align	1
 368              		.global	HAL_SetTickFreq
 369              		.syntax unified
 370              		.code	16
 371              		.thumb_func
 372              		.fpu softvfp
 374              	HAL_SetTickFreq:
 375              	.LVL17:
 376              	.LFB425:
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Set new tick Freq.
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval status
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 377              		.loc 1 338 1 is_stmt 1 view -0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		.loc 1 338 1 is_stmt 0 view .LVU66
 382 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccLs2c0t.s 			page 14


 383              	.LCFI3:
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 4, -8
 386              		.cfi_offset 14, -4
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 387              		.loc 1 339 3 is_stmt 1 view .LVU67
 388              	.LVL18:
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 389              		.loc 1 340 3 view .LVU68
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 390              		.loc 1 341 3 view .LVU69
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   if (uwTickFreq != Freq)
 391              		.loc 1 343 3 view .LVU70
 392              		.loc 1 343 18 is_stmt 0 view .LVU71
 393 0002 084B     		ldr	r3, .L34
 394 0004 1C78     		ldrb	r4, [r3]
 395              		.loc 1 343 3 view .LVU72
 396 0006 8442     		cmp	r4, r0
 397 0008 01D1     		bne	.L33
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 398              		.loc 1 339 21 view .LVU73
 399 000a 0020     		movs	r0, #0
 400              	.LVL19:
 401              	.L31:
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     /* Back up uwTickFreq frequency */
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     prevTickFreq = uwTickFreq;
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     uwTickFreq = Freq;
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     /* Apply the new tick Freq  */
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     if (status != HAL_OK)
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       /* Restore previous tick frequency */
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       uwTickFreq = prevTickFreq;
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return status;
 402              		.loc 1 360 3 is_stmt 1 view .LVU74
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 403              		.loc 1 361 1 is_stmt 0 view .LVU75
 404              		@ sp needed
 405 000c 10BD     		pop	{r4, pc}
 406              	.LVL20:
 407              	.L33:
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 408              		.loc 1 346 5 is_stmt 1 view .LVU76
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 409              		.loc 1 349 5 view .LVU77
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 410              		.loc 1 349 16 is_stmt 0 view .LVU78
 411 000e 1870     		strb	r0, [r3]
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     if (status != HAL_OK)
ARM GAS  /tmp/ccLs2c0t.s 			page 15


 412              		.loc 1 352 5 is_stmt 1 view .LVU79
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     if (status != HAL_OK)
 413              		.loc 1 352 26 is_stmt 0 view .LVU80
 414 0010 054B     		ldr	r3, .L34+4
 415 0012 1868     		ldr	r0, [r3]
 416              	.LVL21:
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     if (status != HAL_OK)
 417              		.loc 1 352 26 view .LVU81
 418 0014 FFF7FEFF 		bl	HAL_InitTick
 419              	.LVL22:
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 420              		.loc 1 353 5 is_stmt 1 view .LVU82
 421 0018 0028     		cmp	r0, #0
 422 001a F7D0     		beq	.L31
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 423              		.loc 1 356 7 view .LVU83
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 424              		.loc 1 356 18 is_stmt 0 view .LVU84
 425 001c 014B     		ldr	r3, .L34
 426 001e 1C70     		strb	r4, [r3]
 427 0020 F4E7     		b	.L31
 428              	.L35:
 429 0022 C046     		.align	2
 430              	.L34:
 431 0024 00000000 		.word	.LANCHOR0
 432 0028 00000000 		.word	.LANCHOR1
 433              		.cfi_endproc
 434              	.LFE425:
 436              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 437              		.align	1
 438              		.global	HAL_GetTickFreq
 439              		.syntax unified
 440              		.code	16
 441              		.thumb_func
 442              		.fpu softvfp
 444              	HAL_GetTickFreq:
 445              	.LFB426:
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief return tick frequency.
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval tick period in Hz
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 446              		.loc 1 368 1 is_stmt 1 view -0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return uwTickFreq;
 451              		.loc 1 369 3 view .LVU86
 452              		.loc 1 369 10 is_stmt 0 view .LVU87
 453 0000 014B     		ldr	r3, .L37
 454 0002 1878     		ldrb	r0, [r3]
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 455              		.loc 1 370 1 view .LVU88
 456              		@ sp needed
ARM GAS  /tmp/ccLs2c0t.s 			page 16


 457 0004 7047     		bx	lr
 458              	.L38:
 459 0006 C046     		.align	2
 460              	.L37:
 461 0008 00000000 		.word	.LANCHOR0
 462              		.cfi_endproc
 463              	.LFE426:
 465              		.section	.text.HAL_Delay,"ax",%progbits
 466              		.align	1
 467              		.weak	HAL_Delay
 468              		.syntax unified
 469              		.code	16
 470              		.thumb_func
 471              		.fpu softvfp
 473              	HAL_Delay:
 474              	.LVL23:
 475              	.LFB427:
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *        on variable incremented.
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is incremented.
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementations in user file.
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 476              		.loc 1 384 1 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              		.loc 1 384 1 is_stmt 0 view .LVU90
 481 0000 70B5     		push	{r4, r5, r6, lr}
 482              	.LCFI4:
 483              		.cfi_def_cfa_offset 16
 484              		.cfi_offset 4, -16
 485              		.cfi_offset 5, -12
 486              		.cfi_offset 6, -8
 487              		.cfi_offset 14, -4
 488 0002 0400     		movs	r4, r0
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 489              		.loc 1 385 3 is_stmt 1 view .LVU91
 490              		.loc 1 385 35 is_stmt 0 view .LVU92
 491 0004 FFF7FEFF 		bl	HAL_GetTick
 492              	.LVL24:
 493              		.loc 1 385 35 view .LVU93
 494 0008 0500     		movs	r5, r0
 495              	.LVL25:
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uint32_t wait = Delay;
 496              		.loc 1 386 3 is_stmt 1 view .LVU94
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
ARM GAS  /tmp/ccLs2c0t.s 			page 17


 497              		.loc 1 389 3 view .LVU95
 498 000a 631C     		adds	r3, r4, #1
 499 000c 02D0     		beq	.L41
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 500              		.loc 1 391 5 view .LVU96
 501              		.loc 1 391 13 is_stmt 0 view .LVU97
 502 000e 044B     		ldr	r3, .L42
 503 0010 1B78     		ldrb	r3, [r3]
 504              		.loc 1 391 10 view .LVU98
 505 0012 E418     		adds	r4, r4, r3
 506              	.LVL26:
 507              	.L41:
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 508              		.loc 1 394 3 is_stmt 1 view .LVU99
 509              		.loc 1 394 38 view .LVU100
 510              		.loc 1 394 22 is_stmt 0 view .LVU101
 511 0014 FFF7FEFF 		bl	HAL_GetTick
 512              	.LVL27:
 513              		.loc 1 394 25 view .LVU102
 514 0018 401B     		subs	r0, r0, r5
 515              		.loc 1 394 38 view .LVU103
 516 001a A042     		cmp	r0, r4
 517 001c FAD3     		bcc	.L41
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 518              		.loc 1 397 1 view .LVU104
 519              		@ sp needed
 520              	.LVL28:
 521              	.LVL29:
 522              		.loc 1 397 1 view .LVU105
 523 001e 70BD     		pop	{r4, r5, r6, pc}
 524              	.L43:
 525              		.align	2
 526              	.L42:
 527 0020 00000000 		.word	.LANCHOR0
 528              		.cfi_endproc
 529              	.LFE427:
 531              		.section	.text.HAL_SuspendTick,"ax",%progbits
 532              		.align	1
 533              		.weak	HAL_SuspendTick
 534              		.syntax unified
 535              		.code	16
 536              		.thumb_func
 537              		.fpu softvfp
 539              	HAL_SuspendTick:
 540              	.LFB428:
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Suspend Tick increment.
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is suspended.
ARM GAS  /tmp/ccLs2c0t.s 			page 18


 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementations in user file.
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_SuspendTick(void)
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 541              		.loc 1 410 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Disable SysTick Interrupt */
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 546              		.loc 1 412 3 view .LVU107
 547 0000 024A     		ldr	r2, .L45
 548 0002 1368     		ldr	r3, [r2]
 549 0004 0221     		movs	r1, #2
 550 0006 8B43     		bics	r3, r1
 551 0008 1360     		str	r3, [r2]
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 552              		.loc 1 413 1 is_stmt 0 view .LVU108
 553              		@ sp needed
 554 000a 7047     		bx	lr
 555              	.L46:
 556              		.align	2
 557              	.L45:
 558 000c 10E000E0 		.word	-536813552
 559              		.cfi_endproc
 560              	.LFE428:
 562              		.section	.text.HAL_ResumeTick,"ax",%progbits
 563              		.align	1
 564              		.weak	HAL_ResumeTick
 565              		.syntax unified
 566              		.code	16
 567              		.thumb_func
 568              		.fpu softvfp
 570              	HAL_ResumeTick:
 571              	.LFB429:
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Resume Tick increment.
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is resumed.
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementations in user file.
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_ResumeTick(void)
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 572              		.loc 1 426 1 is_stmt 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Enable SysTick Interrupt */
ARM GAS  /tmp/ccLs2c0t.s 			page 19


 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 577              		.loc 1 428 3 view .LVU110
 578 0000 024A     		ldr	r2, .L48
 579 0002 1368     		ldr	r3, [r2]
 580 0004 0221     		movs	r1, #2
 581 0006 0B43     		orrs	r3, r1
 582 0008 1360     		str	r3, [r2]
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 583              		.loc 1 429 1 is_stmt 0 view .LVU111
 584              		@ sp needed
 585 000a 7047     		bx	lr
 586              	.L49:
 587              		.align	2
 588              	.L48:
 589 000c 10E000E0 		.word	-536813552
 590              		.cfi_endproc
 591              	.LFE429:
 593              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 594              		.align	1
 595              		.global	HAL_GetHalVersion
 596              		.syntax unified
 597              		.code	16
 598              		.thumb_func
 599              		.fpu softvfp
 601              	HAL_GetHalVersion:
 602              	.LFB430:
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns the HAL revision
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 603              		.loc 1 436 1 is_stmt 1 view -0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return __STM32G0xx_HAL_VERSION;
 608              		.loc 1 437 3 view .LVU113
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 609              		.loc 1 438 1 is_stmt 0 view .LVU114
 610 0000 0048     		ldr	r0, .L51
 611              		@ sp needed
 612 0002 7047     		bx	lr
 613              	.L52:
 614              		.align	2
 615              	.L51:
 616 0004 00020401 		.word	17039872
 617              		.cfi_endproc
 618              	.LFE430:
 620              		.section	.text.HAL_GetREVID,"ax",%progbits
 621              		.align	1
 622              		.global	HAL_GetREVID
 623              		.syntax unified
 624              		.code	16
 625              		.thumb_func
ARM GAS  /tmp/ccLs2c0t.s 			page 20


 626              		.fpu softvfp
 628              	HAL_GetREVID:
 629              	.LFB431:
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns the device revision identifier.
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device revision identifier
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetREVID(void)
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 630              		.loc 1 445 1 is_stmt 1 view -0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return ((DBG->IDCODE & DBG_IDCODE_REV_ID) >> 16U);
 635              		.loc 1 446 3 view .LVU116
 636              		.loc 1 446 17 is_stmt 0 view .LVU117
 637 0000 014B     		ldr	r3, .L54
 638 0002 1868     		ldr	r0, [r3]
 639              		.loc 1 446 45 view .LVU118
 640 0004 000C     		lsrs	r0, r0, #16
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 641              		.loc 1 447 1 view .LVU119
 642              		@ sp needed
 643 0006 7047     		bx	lr
 644              	.L55:
 645              		.align	2
 646              	.L54:
 647 0008 00580140 		.word	1073829888
 648              		.cfi_endproc
 649              	.LFE431:
 651              		.section	.text.HAL_GetDEVID,"ax",%progbits
 652              		.align	1
 653              		.global	HAL_GetDEVID
 654              		.syntax unified
 655              		.code	16
 656              		.thumb_func
 657              		.fpu softvfp
 659              	HAL_GetDEVID:
 660              	.LFB432:
 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns the device identifier.
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device identifier
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 661              		.loc 1 454 1 is_stmt 1 view -0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return ((DBG->IDCODE) & DBG_IDCODE_DEV_ID);
 666              		.loc 1 455 3 view .LVU121
 667              		.loc 1 455 17 is_stmt 0 view .LVU122
 668 0000 024B     		ldr	r3, .L57
ARM GAS  /tmp/ccLs2c0t.s 			page 21


 669 0002 1868     		ldr	r0, [r3]
 670              		.loc 1 455 44 view .LVU123
 671 0004 0005     		lsls	r0, r0, #20
 672 0006 000D     		lsrs	r0, r0, #20
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 673              		.loc 1 456 1 view .LVU124
 674              		@ sp needed
 675 0008 7047     		bx	lr
 676              	.L58:
 677 000a C046     		.align	2
 678              	.L57:
 679 000c 00580140 		.word	1073829888
 680              		.cfi_endproc
 681              	.LFE432:
 683              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 684              		.align	1
 685              		.global	HAL_GetUIDw0
 686              		.syntax unified
 687              		.code	16
 688              		.thumb_func
 689              		.fpu softvfp
 691              	HAL_GetUIDw0:
 692              	.LFB433:
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device identifier
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 693              		.loc 1 463 1 is_stmt 1 view -0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              		@ link register save eliminated.
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return (READ_REG(*((uint32_t *)UID_BASE)));
 698              		.loc 1 464 3 view .LVU126
 699              		.loc 1 464 44 is_stmt 0 view .LVU127
 700 0000 014B     		ldr	r3, .L60
 701 0002 1868     		ldr	r0, [r3]
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 702              		.loc 1 465 1 view .LVU128
 703              		@ sp needed
 704 0004 7047     		bx	lr
 705              	.L61:
 706 0006 C046     		.align	2
 707              	.L60:
 708 0008 9075FF1F 		.word	536835472
 709              		.cfi_endproc
 710              	.LFE433:
 712              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 713              		.align	1
 714              		.global	HAL_GetUIDw1
 715              		.syntax unified
 716              		.code	16
 717              		.thumb_func
 718              		.fpu softvfp
ARM GAS  /tmp/ccLs2c0t.s 			page 22


 720              	HAL_GetUIDw1:
 721              	.LFB434:
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device identifier
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 722              		.loc 1 472 1 is_stmt 1 view -0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726              		@ link register save eliminated.
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 727              		.loc 1 473 3 view .LVU130
 728              		.loc 1 473 51 is_stmt 0 view .LVU131
 729 0000 014B     		ldr	r3, .L63
 730 0002 1868     		ldr	r0, [r3]
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 731              		.loc 1 474 1 view .LVU132
 732              		@ sp needed
 733 0004 7047     		bx	lr
 734              	.L64:
 735 0006 C046     		.align	2
 736              	.L63:
 737 0008 9475FF1F 		.word	536835476
 738              		.cfi_endproc
 739              	.LFE434:
 741              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 742              		.align	1
 743              		.global	HAL_GetUIDw2
 744              		.syntax unified
 745              		.code	16
 746              		.thumb_func
 747              		.fpu softvfp
 749              	HAL_GetUIDw2:
 750              	.LFB435:
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device identifier
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 751              		.loc 1 481 1 is_stmt 1 view -0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 756              		.loc 1 482 3 view .LVU134
 757              		.loc 1 482 51 is_stmt 0 view .LVU135
 758 0000 014B     		ldr	r3, .L66
 759 0002 1868     		ldr	r0, [r3]
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 760              		.loc 1 483 1 view .LVU136
ARM GAS  /tmp/ccLs2c0t.s 			page 23


 761              		@ sp needed
 762 0004 7047     		bx	lr
 763              	.L67:
 764 0006 C046     		.align	2
 765              	.L66:
 766 0008 9875FF1F 		.word	536835480
 767              		.cfi_endproc
 768              	.LFE435:
 770              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 771              		.align	1
 772              		.global	HAL_DBGMCU_EnableDBGStopMode
 773              		.syntax unified
 774              		.code	16
 775              		.thumb_func
 776              		.fpu softvfp
 778              	HAL_DBGMCU_EnableDBGStopMode:
 779              	.LFB436:
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group3
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *  @brief    HAL Debug functions
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @verbatim
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                       ##### HAL Debug functions #####
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]  This section provides functions allowing to:
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @endverbatim
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 780              		.loc 1 509 1 is_stmt 1 view -0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(DBG->CR, DBG_CR_DBG_STOP);
 785              		.loc 1 510 3 view .LVU138
 786 0000 024A     		ldr	r2, .L69
 787 0002 5368     		ldr	r3, [r2, #4]
 788 0004 0221     		movs	r1, #2
 789 0006 0B43     		orrs	r3, r1
 790 0008 5360     		str	r3, [r2, #4]
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 791              		.loc 1 511 1 is_stmt 0 view .LVU139
ARM GAS  /tmp/ccLs2c0t.s 			page 24


 792              		@ sp needed
 793 000a 7047     		bx	lr
 794              	.L70:
 795              		.align	2
 796              	.L69:
 797 000c 00580140 		.word	1073829888
 798              		.cfi_endproc
 799              	.LFE436:
 801              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 802              		.align	1
 803              		.global	HAL_DBGMCU_DisableDBGStopMode
 804              		.syntax unified
 805              		.code	16
 806              		.thumb_func
 807              		.fpu softvfp
 809              	HAL_DBGMCU_DisableDBGStopMode:
 810              	.LFB437:
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 811              		.loc 1 518 1 is_stmt 1 view -0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(DBG->CR, DBG_CR_DBG_STOP);
 816              		.loc 1 519 3 view .LVU141
 817 0000 024A     		ldr	r2, .L72
 818 0002 5368     		ldr	r3, [r2, #4]
 819 0004 0221     		movs	r1, #2
 820 0006 8B43     		bics	r3, r1
 821 0008 5360     		str	r3, [r2, #4]
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 822              		.loc 1 520 1 is_stmt 0 view .LVU142
 823              		@ sp needed
 824 000a 7047     		bx	lr
 825              	.L73:
 826              		.align	2
 827              	.L72:
 828 000c 00580140 		.word	1073829888
 829              		.cfi_endproc
 830              	.LFE437:
 832              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 833              		.align	1
 834              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 835              		.syntax unified
 836              		.code	16
 837              		.thumb_func
 838              		.fpu softvfp
 840              	HAL_DBGMCU_EnableDBGStandbyMode:
 841              	.LFB438:
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
ARM GAS  /tmp/ccLs2c0t.s 			page 25


 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 842              		.loc 1 527 1 is_stmt 1 view -0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(DBG->CR, DBG_CR_DBG_STANDBY);
 847              		.loc 1 528 3 view .LVU144
 848 0000 024A     		ldr	r2, .L75
 849 0002 5368     		ldr	r3, [r2, #4]
 850 0004 0421     		movs	r1, #4
 851 0006 0B43     		orrs	r3, r1
 852 0008 5360     		str	r3, [r2, #4]
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 853              		.loc 1 529 1 is_stmt 0 view .LVU145
 854              		@ sp needed
 855 000a 7047     		bx	lr
 856              	.L76:
 857              		.align	2
 858              	.L75:
 859 000c 00580140 		.word	1073829888
 860              		.cfi_endproc
 861              	.LFE438:
 863              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 864              		.align	1
 865              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 866              		.syntax unified
 867              		.code	16
 868              		.thumb_func
 869              		.fpu softvfp
 871              	HAL_DBGMCU_DisableDBGStandbyMode:
 872              	.LFB439:
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 873              		.loc 1 536 1 is_stmt 1 view -0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 0
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877              		@ link register save eliminated.
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(DBG->CR, DBG_CR_DBG_STANDBY);
 878              		.loc 1 537 3 view .LVU147
 879 0000 024A     		ldr	r2, .L78
 880 0002 5368     		ldr	r3, [r2, #4]
 881 0004 0421     		movs	r1, #4
 882 0006 8B43     		bics	r3, r1
 883 0008 5360     		str	r3, [r2, #4]
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 884              		.loc 1 538 1 is_stmt 0 view .LVU148
ARM GAS  /tmp/ccLs2c0t.s 			page 26


 885              		@ sp needed
 886 000a 7047     		bx	lr
 887              	.L79:
 888              		.align	2
 889              	.L78:
 890 000c 00580140 		.word	1073829888
 891              		.cfi_endproc
 892              	.LFE439:
 894              		.section	.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster,"ax",%progbits
 895              		.align	1
 896              		.global	HAL_SYSCFG_EnableIOAnalogSwitchBooster
 897              		.syntax unified
 898              		.code	16
 899              		.thumb_func
 900              		.fpu softvfp
 902              	HAL_SYSCFG_EnableIOAnalogSwitchBooster:
 903              	.LFB440:
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group4
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *  @brief    SYSCFG configuration functions
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @verbatim
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                       ##### HAL SYSCFG configuration functions #####
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]  This section provides functions allowing to:
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable Pin remap
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Configure the Voltage reference buffer
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable the Voltage reference buffer
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable the I/O analog switch voltage booster
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable dead battery behavior(*)
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Configure Clamping Diode on specific pins(*)
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****    (*) Feature not available on all devices
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @endverbatim
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if defined(VREFBUF)
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Configure the internal voltage reference buffer voltage scale.
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  VoltageScaling specifies the output voltage to achieve
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be one of the following values:
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_VREFBUF_VoltageScale
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_VREFBUF_VoltageScalingConfig(uint32_t VoltageScaling)
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameters */
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_VOLTAGE_SCALE(VoltageScaling));
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_VRS, VoltageScaling);
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
ARM GAS  /tmp/ccLs2c0t.s 			page 27


 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Configure the internal voltage reference buffer high impedance mode.
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  Mode specifies the high impedance mode
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *          This parameter can be one of the following values:
 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *          @arg @ref SYSCFG_VREFBUF_HighImpedance
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_VREFBUF_HighImpedanceConfig(uint32_t Mode)
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameters */
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_HIGH_IMPEDANCE(Mode));
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_HIZ, Mode);
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Tune the Internal Voltage Reference buffer (VREFBUF).
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note   VrefBuf voltage scale is calibrated in production for each device,
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         using voltage scale 1. This calibration value is loaded
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         as default trimming value at device power up.
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This trimming value can be fine tuned for voltage scales 0 and 1
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         using this function.
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_VREFBUF_TrimmingConfig(uint32_t TrimmingValue)
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameters */
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_TRIMMING(TrimmingValue));
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   MODIFY_REG(VREFBUF->CCR, VREFBUF_CCR_TRIM, TrimmingValue);
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the Internal Voltage Reference buffer (VREFBUF).
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval HAL_OK/HAL_TIMEOUT
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_StatusTypeDef HAL_SYSCFG_EnableVREFBUF(void)
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uint32_t  tickstart;
 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Get Start Tick*/
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   tickstart = HAL_GetTick();
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Wait for VRR bit  */
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   while (READ_BIT(VREFBUF->CSR, VREFBUF_CSR_VRR) == 0x00U)
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     if ((HAL_GetTick() - tickstart) > VREFBUF_TIMEOUT_VALUE)
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       return HAL_TIMEOUT;
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return HAL_OK;
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
ARM GAS  /tmp/ccLs2c0t.s 			page 28


 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the Internal Voltage Reference buffer (VREFBUF).
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_DisableVREFBUF(void)
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* VREFBUF */
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the I/O analog switch voltage booster
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_EnableIOAnalogSwitchBooster(void)
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 904              		.loc 1 652 1 is_stmt 1 view -0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOSTEN);
 909              		.loc 1 653 3 view .LVU150
 910 0000 034A     		ldr	r2, .L81
 911 0002 1168     		ldr	r1, [r2]
 912 0004 8023     		movs	r3, #128
 913 0006 5B00     		lsls	r3, r3, #1
 914 0008 0B43     		orrs	r3, r1
 915 000a 1360     		str	r3, [r2]
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 916              		.loc 1 654 1 is_stmt 0 view .LVU151
 917              		@ sp needed
 918 000c 7047     		bx	lr
 919              	.L82:
 920 000e C046     		.align	2
 921              	.L81:
 922 0010 00000140 		.word	1073807360
 923              		.cfi_endproc
 924              	.LFE440:
 926              		.section	.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster,"ax",%progbits
 927              		.align	1
 928              		.global	HAL_SYSCFG_DisableIOAnalogSwitchBooster
 929              		.syntax unified
 930              		.code	16
 931              		.thumb_func
 932              		.fpu softvfp
 934              	HAL_SYSCFG_DisableIOAnalogSwitchBooster:
 935              	.LFB441:
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the I/O analog switch voltage booster
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_DisableIOAnalogSwitchBooster(void)
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 936              		.loc 1 661 1 is_stmt 1 view -0
ARM GAS  /tmp/ccLs2c0t.s 			page 29


 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		@ link register save eliminated.
 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOSTEN);
 941              		.loc 1 662 3 view .LVU153
 942 0000 024A     		ldr	r2, .L84
 943 0002 1368     		ldr	r3, [r2]
 944 0004 0249     		ldr	r1, .L84+4
 945 0006 0B40     		ands	r3, r1
 946 0008 1360     		str	r3, [r2]
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 947              		.loc 1 663 1 is_stmt 0 view .LVU154
 948              		@ sp needed
 949 000a 7047     		bx	lr
 950              	.L85:
 951              		.align	2
 952              	.L84:
 953 000c 00000140 		.word	1073807360
 954 0010 FFFEFFFF 		.word	-257
 955              		.cfi_endproc
 956              	.LFE441:
 958              		.section	.text.HAL_SYSCFG_EnableRemap,"ax",%progbits
 959              		.align	1
 960              		.global	HAL_SYSCFG_EnableRemap
 961              		.syntax unified
 962              		.code	16
 963              		.thumb_func
 964              		.fpu softvfp
 966              	HAL_SYSCFG_EnableRemap:
 967              	.LVL30:
 968              	.LFB442:
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the remap on PA11_PA12
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  PinRemap specifies which pins have to be remapped
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_REMAP_PA11
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_REMAP_PA12
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_EnableRemap(uint32_t PinRemap)
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 969              		.loc 1 674 1 is_stmt 1 view -0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973              		@ link register save eliminated.
 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameter */
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_HAL_REMAP_PIN(PinRemap));
 974              		.loc 1 676 3 view .LVU156
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SYSCFG->CFGR1, PinRemap);
 975              		.loc 1 677 3 view .LVU157
 976 0000 024A     		ldr	r2, .L87
 977 0002 1368     		ldr	r3, [r2]
 978 0004 0343     		orrs	r3, r0
 979 0006 1360     		str	r3, [r2]
ARM GAS  /tmp/ccLs2c0t.s 			page 30


 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 980              		.loc 1 678 1 is_stmt 0 view .LVU158
 981              		@ sp needed
 982 0008 7047     		bx	lr
 983              	.L88:
 984 000a C046     		.align	2
 985              	.L87:
 986 000c 00000140 		.word	1073807360
 987              		.cfi_endproc
 988              	.LFE442:
 990              		.section	.text.HAL_SYSCFG_DisableRemap,"ax",%progbits
 991              		.align	1
 992              		.global	HAL_SYSCFG_DisableRemap
 993              		.syntax unified
 994              		.code	16
 995              		.thumb_func
 996              		.fpu softvfp
 998              	HAL_SYSCFG_DisableRemap:
 999              	.LVL31:
 1000              	.LFB443:
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the remap on PA11_PA12
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  PinRemap specifies which pins will behave normally
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_REMAP_PA11
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_REMAP_PA12
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_DisableRemap(uint32_t PinRemap)
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 1001              		.loc 1 689 1 is_stmt 1 view -0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              		@ link register save eliminated.
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameter */
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_HAL_REMAP_PIN(PinRemap));
 1006              		.loc 1 691 3 view .LVU160
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SYSCFG->CFGR1, PinRemap);
 1007              		.loc 1 692 3 view .LVU161
 1008 0000 024A     		ldr	r2, .L90
 1009 0002 1368     		ldr	r3, [r2]
 1010 0004 8343     		bics	r3, r0
 1011 0006 1360     		str	r3, [r2]
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1012              		.loc 1 693 1 is_stmt 0 view .LVU162
 1013              		@ sp needed
 1014 0008 7047     		bx	lr
 1015              	.L91:
 1016 000a C046     		.align	2
 1017              	.L90:
 1018 000c 00000140 		.word	1073807360
 1019              		.cfi_endproc
 1020              	.LFE443:
 1022              		.section	.text.HAL_SYSCFG_EnableClampingDiode,"ax",%progbits
 1023              		.align	1
ARM GAS  /tmp/ccLs2c0t.s 			page 31


 1024              		.global	HAL_SYSCFG_EnableClampingDiode
 1025              		.syntax unified
 1026              		.code	16
 1027              		.thumb_func
 1028              		.fpu softvfp
 1030              	HAL_SYSCFG_EnableClampingDiode:
 1031              	.LVL32:
 1032              	.LFB444:
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if defined(SYSCFG_CDEN_SUPPORT)
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable Clamping Diode on specified IO
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  PinConfig specifies on which pins clamping Diode has to be enabled
 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_ClampingDiode
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_EnableClampingDiode(uint32_t PinConfig)
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 1033              		.loc 1 704 1 is_stmt 1 view -0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              		@ link register save eliminated.
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameter */
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_CLAMPINGDIODE(PinConfig));
 1038              		.loc 1 706 3 view .LVU164
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SYSCFG->CFGR2, PinConfig);
 1039              		.loc 1 707 3 view .LVU165
 1040 0000 024A     		ldr	r2, .L93
 1041 0002 9369     		ldr	r3, [r2, #24]
 1042 0004 0343     		orrs	r3, r0
 1043 0006 9361     		str	r3, [r2, #24]
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1044              		.loc 1 708 1 is_stmt 0 view .LVU166
 1045              		@ sp needed
 1046 0008 7047     		bx	lr
 1047              	.L94:
 1048 000a C046     		.align	2
 1049              	.L93:
 1050 000c 00000140 		.word	1073807360
 1051              		.cfi_endproc
 1052              	.LFE444:
 1054              		.section	.text.HAL_SYSCFG_DisableClampingDiode,"ax",%progbits
 1055              		.align	1
 1056              		.global	HAL_SYSCFG_DisableClampingDiode
 1057              		.syntax unified
 1058              		.code	16
 1059              		.thumb_func
 1060              		.fpu softvfp
 1062              	HAL_SYSCFG_DisableClampingDiode:
 1063              	.LVL33:
 1064              	.LFB445:
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable Clamping Diode on specified IO
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  PinConfig specifies on which pins clamping Diode has to be disabled
ARM GAS  /tmp/ccLs2c0t.s 			page 32


 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_ClampingDiode
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_DisableClampingDiode(uint32_t PinConfig)
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 1065              		.loc 1 718 1 is_stmt 1 view -0
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069              		@ link register save eliminated.
 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameter */
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_CLAMPINGDIODE(PinConfig));
 1070              		.loc 1 720 3 view .LVU168
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SYSCFG->CFGR2, PinConfig);
 1071              		.loc 1 721 3 view .LVU169
 1072 0000 024A     		ldr	r2, .L96
 1073 0002 9369     		ldr	r3, [r2, #24]
 1074 0004 8343     		bics	r3, r0
 1075 0006 9361     		str	r3, [r2, #24]
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1076              		.loc 1 722 1 is_stmt 0 view .LVU170
 1077              		@ sp needed
 1078 0008 7047     		bx	lr
 1079              	.L97:
 1080 000a C046     		.align	2
 1081              	.L96:
 1082 000c 00000140 		.word	1073807360
 1083              		.cfi_endproc
 1084              	.LFE445:
 1086              		.global	uwTickFreq
 1087              		.global	uwTickPrio
 1088              		.global	uwTick
 1089              		.section	.bss.uwTick,"aw",%nobits
 1090              		.align	2
 1091              		.set	.LANCHOR2,. + 0
 1094              	uwTick:
 1095 0000 00000000 		.space	4
 1096              		.section	.data.uwTickFreq,"aw"
 1097              		.set	.LANCHOR0,. + 0
 1100              	uwTickFreq:
 1101 0000 01       		.byte	1
 1102              		.section	.data.uwTickPrio,"aw"
 1103              		.align	2
 1104              		.set	.LANCHOR1,. + 0
 1107              	uwTickPrio:
 1108 0000 04000000 		.word	4
 1109              		.text
 1110              	.Letext0:
 1111              		.file 2 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g030xx.h"
 1112              		.file 3 "/home/robert/gcc-arm-none-eabi-10.3-2021.07/arm-none-eabi/include/machine/_default_types.
 1113              		.file 4 "/home/robert/gcc-arm-none-eabi-10.3-2021.07/arm-none-eabi/include/sys/_stdint.h"
 1114              		.file 5 "Drivers/CMSIS/Include/core_cm0plus.h"
 1115              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 1116              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 1117              		.file 8 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 1118              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_cortex.h"
ARM GAS  /tmp/ccLs2c0t.s 			page 33


 1119              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
ARM GAS  /tmp/ccLs2c0t.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g0xx_hal.c
     /tmp/ccLs2c0t.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccLs2c0t.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccLs2c0t.s:39     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccLs2c0t.s:46     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccLs2c0t.s:60     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccLs2c0t.s:67     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccLs2c0t.s:110    .text.HAL_DeInit:0000000000000024 $d
     /tmp/ccLs2c0t.s:116    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccLs2c0t.s:123    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccLs2c0t.s:206    .text.HAL_InitTick:000000000000004c $d
     /tmp/ccLs2c0t.s:213    .text.HAL_Init:0000000000000000 $t
     /tmp/ccLs2c0t.s:220    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccLs2c0t.s:269    .text.HAL_Init:0000000000000024 $d
     /tmp/ccLs2c0t.s:274    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccLs2c0t.s:281    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccLs2c0t.s:303    .text.HAL_IncTick:0000000000000010 $d
     /tmp/ccLs2c0t.s:309    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccLs2c0t.s:316    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccLs2c0t.s:333    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccLs2c0t.s:338    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccLs2c0t.s:345    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccLs2c0t.s:362    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccLs2c0t.s:367    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccLs2c0t.s:374    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccLs2c0t.s:431    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/ccLs2c0t.s:437    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccLs2c0t.s:444    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccLs2c0t.s:461    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccLs2c0t.s:466    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccLs2c0t.s:473    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccLs2c0t.s:527    .text.HAL_Delay:0000000000000020 $d
     /tmp/ccLs2c0t.s:532    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccLs2c0t.s:539    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccLs2c0t.s:558    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccLs2c0t.s:563    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccLs2c0t.s:570    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccLs2c0t.s:589    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccLs2c0t.s:594    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccLs2c0t.s:601    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccLs2c0t.s:616    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccLs2c0t.s:621    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccLs2c0t.s:628    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccLs2c0t.s:647    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccLs2c0t.s:652    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccLs2c0t.s:659    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccLs2c0t.s:679    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccLs2c0t.s:684    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccLs2c0t.s:691    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccLs2c0t.s:708    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccLs2c0t.s:713    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccLs2c0t.s:720    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccLs2c0t.s:737    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccLs2c0t.s:742    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccLs2c0t.s:749    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccLs2c0t.s:766    .text.HAL_GetUIDw2:0000000000000008 $d
ARM GAS  /tmp/ccLs2c0t.s 			page 35


     /tmp/ccLs2c0t.s:771    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccLs2c0t.s:778    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccLs2c0t.s:797    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccLs2c0t.s:802    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccLs2c0t.s:809    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccLs2c0t.s:828    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccLs2c0t.s:833    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccLs2c0t.s:840    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccLs2c0t.s:859    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccLs2c0t.s:864    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccLs2c0t.s:871    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccLs2c0t.s:890    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccLs2c0t.s:895    .text.HAL_SYSCFG_EnableIOAnalogSwitchBooster:0000000000000000 $t
     /tmp/ccLs2c0t.s:902    .text.HAL_SYSCFG_EnableIOAnalogSwitchBooster:0000000000000000 HAL_SYSCFG_EnableIOAnalogSwitchBooster
     /tmp/ccLs2c0t.s:922    .text.HAL_SYSCFG_EnableIOAnalogSwitchBooster:0000000000000010 $d
     /tmp/ccLs2c0t.s:927    .text.HAL_SYSCFG_DisableIOAnalogSwitchBooster:0000000000000000 $t
     /tmp/ccLs2c0t.s:934    .text.HAL_SYSCFG_DisableIOAnalogSwitchBooster:0000000000000000 HAL_SYSCFG_DisableIOAnalogSwitchBooster
     /tmp/ccLs2c0t.s:953    .text.HAL_SYSCFG_DisableIOAnalogSwitchBooster:000000000000000c $d
     /tmp/ccLs2c0t.s:959    .text.HAL_SYSCFG_EnableRemap:0000000000000000 $t
     /tmp/ccLs2c0t.s:966    .text.HAL_SYSCFG_EnableRemap:0000000000000000 HAL_SYSCFG_EnableRemap
     /tmp/ccLs2c0t.s:986    .text.HAL_SYSCFG_EnableRemap:000000000000000c $d
     /tmp/ccLs2c0t.s:991    .text.HAL_SYSCFG_DisableRemap:0000000000000000 $t
     /tmp/ccLs2c0t.s:998    .text.HAL_SYSCFG_DisableRemap:0000000000000000 HAL_SYSCFG_DisableRemap
     /tmp/ccLs2c0t.s:1018   .text.HAL_SYSCFG_DisableRemap:000000000000000c $d
     /tmp/ccLs2c0t.s:1023   .text.HAL_SYSCFG_EnableClampingDiode:0000000000000000 $t
     /tmp/ccLs2c0t.s:1030   .text.HAL_SYSCFG_EnableClampingDiode:0000000000000000 HAL_SYSCFG_EnableClampingDiode
     /tmp/ccLs2c0t.s:1050   .text.HAL_SYSCFG_EnableClampingDiode:000000000000000c $d
     /tmp/ccLs2c0t.s:1055   .text.HAL_SYSCFG_DisableClampingDiode:0000000000000000 $t
     /tmp/ccLs2c0t.s:1062   .text.HAL_SYSCFG_DisableClampingDiode:0000000000000000 HAL_SYSCFG_DisableClampingDiode
     /tmp/ccLs2c0t.s:1082   .text.HAL_SYSCFG_DisableClampingDiode:000000000000000c $d
     /tmp/ccLs2c0t.s:1100   .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccLs2c0t.s:1107   .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccLs2c0t.s:1094   .bss.uwTick:0000000000000000 uwTick
     /tmp/ccLs2c0t.s:1090   .bss.uwTick:0000000000000000 $d
     /tmp/ccLs2c0t.s:1103   .data.uwTickPrio:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
